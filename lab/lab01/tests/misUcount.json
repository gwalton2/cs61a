{"countData": {"andshrtcirtruthy": 1, "andshrtcirtruthy-and": 1, "andshrtcirtruthy-shortcircuit": 1, "boolexprrtnbool": 1, "boolexprrtnbool-and": 1, "boolexprrtnbool-or": 1, "swapandor": 1, "swapandor-and": 1, "swapandor-or": 1, "swapandor-shortcircuit": 1, "wrnboolopprecedence": 1, "wrnboolopprecedence-boolorderofoperations": 1, "zerodivdsnterr": 1, "zerodivdsnterr-zerodiverror": 1, "sloppyloopcondition": 1, "sloppyloopcondition-sloppy": 1, "sloppyifcondition": 1, "sloppyifcondition-sloppy": 1, "strdsntneedquotes": 1, "strdsntneedquotes-stringsyntax": 1, "correct": 1, "prntstrwithquotes": 3, "prntstrwithquotes-printstring": 3, "ififisifelse": 1, "ififisifelse-ifclause": 1, "ififisifelse-sloppy": 1}, "answerDict": {">>> True and 13\nLOCKED_ANSWER\n>>> False or 0\nLOCKED_ANSWER\n>>> not 10\nLOCKED_ANSWER\n>>> not None\nLOCKED_ANSWER\n": ["['True']", "['True 13']", "['exit']"], ">>> True and 1 / 0 and False\nLOCKED_ANSWER\n>>> True or 1 / 0 or False\nLOCKED_ANSWER\n>>> True and 0\nLOCKED_ANSWER\n>>> False or 1\nLOCKED_ANSWER\n>>> 1 and 3 and 6 and 10 and 15\nLOCKED_ANSWER\n>>> 0 or False or 2 or 1 / 0\nLOCKED_ANSWER\n": ["['False']"], ">>> n = 3\n>>> while n >= 0:\n...     n -= 1\n...     print(n)\nLOCKED_ANSWER\nLOCKED_ANSWER\nLOCKED_ANSWER\nLOCKED_ANSWER\n": ["['2', '1', '0', '']"], ">>> def how_big(x):\n...     if x > 10:\n...         print('huge')\n...     elif x > 5:\n...         return 'big'\n...     elif x > 0:\n...         print('small')\n...     else:\n...         print(\"nothin'\")\n>>> how_big(7)\nLOCKED_ANSWER\n>>> how_big(12)\nLOCKED_ANSWER\n>>> how_big(1)\nLOCKED_ANSWER\n>>> how_big(-1)\nLOCKED_ANSWER\n": ["['huge']", "['big']"], ">>> def how_big(x):\n...     if x > 10:\n...         print('huge')\n...     elif x > 5:\n...         return 'big'\n...     elif x > 0:\n...         print('small')\n...     else:\n...         print(\"nothin'\")\n>>> how_big(7)\n'big'\n>>> how_big(12)\nhuge\n>>> how_big(1)\nsmall\n>>> how_big(-1)\nLOCKED_ANSWER\n": ["['nothin']", "[\"'nothin'\"]", "['\"nothing\"']", "['\"nothin\"']"], ">>> def so_big(x):\n...     if x > 10:\n...         print('huge')\n...     if x > 5:\n...         return 'big'\n...     if x > 0:\n...         print('small')\n...     print(\"nothin'\")\n>>> so_big(7)\n'big'\n>>> so_big(12)\nLOCKED_ANSWER\nLOCKED_ANSWER\n>>> so_big(1)\nLOCKED_ANSWER\nLOCKED_ANSWER\n": ["['huge', \"nothin'\"]"]}}